<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">

 <spring:beans>
        <spring:bean class="java.util.HashMap" id="personDataStore" name="personDataStore" scope="singleton"/>
        <spring:bean class="java.util.concurrent.atomic.AtomicInteger" id="personId" name="personId" scope="singleton"/>
    </spring:beans>
    
    <http:listener-config name="HTTP_Listener_Configuration" host="localhost" port="8081" doc:name="HTTP Listener Configuration"/>
    <flow name="persondataFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/person" allowedMethods="POST" doc:name="HTTP"/>
        <json:json-to-object-transformer doc:name="JSON to Object"/>
        <set-variable variableName="personId" value="#[app.registry.'personId'.incrementAndGet()]" doc:name="Variable"/>
        <expression-component doc:name="Store person"><![CDATA[app.registry.'personDataStore'.put(personId, payload);]]></expression-component>
        <set-payload doc:name="Set success response" value="{ &quot;status&quot;: &quot;success&quot;, &quot;statusDescription&quot;: &quot;person created successfully&quot;}"/>
    </flow>
    
         <flow name="retrievePersonFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/person/{personId}" allowedMethods="GET" doc:name="HTTP">
          <http:error-response-builder reasonPhrase="#[errorReasonPhrase]" statusCode="#[errorStatusCode]"/>
        </http:listener> 
         <set-variable doc:name="Variable1" value="#[Integer.valueOf(message.inboundProperties.'http.uri.params'.personId)]" variableName="personId"/>
        <logger doc:name="Logger" level="ERROR" message="Person id is #[personId]"/>  
        <message-filter doc:name="Fail if person does not exists" throwOnUnaccepted="true">
            <expression-filter expression="#[app.registry.'personDataStore'.containsKey(personId)]"/>
        </message-filter>
          <set-payload doc:name="Lookup person and set as payload" value="#[app.registry.'personDataStore'.get(personId)]"/>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
            <rollback-exception-strategy doc:name="Rollback Exception Strategy" when="#[exception.causedBy(org.mule.api.routing.filter.FilterUnacceptedException)]">
                <set-variable doc:name="Set status code" value="404" variableName="errorStatusCode"/>
                <set-variable doc:name="Set reason phrase" value="Not Found" variableName="errorReasonPhrase"/>
            </rollback-exception-strategy>
        </choice-exception-strategy>
         </flow>
    
</mule>
